#!/usr/bin/python3

import base64
import datetime
import hashlib
import hmac
import json
import subprocess
import time
import urllib.parse
import urllib.request
import requests

secret = ''
token = ''


def dingtalk(message):
    message = "Message from cve-ease: \n" + \
              "当前时间 %s" % datetime.datetime.now().strftime("%Y年%m月%d日%H时%M分%S秒") + "\n" \
              + message

    timestamp = str(round(time.time() * 1000))
    secret_enc = secret.encode('utf-8')
    string_to_sign = '{}\n{}'.format(timestamp, secret)
    string_to_sign_enc = string_to_sign.encode('utf-8')
    hmac_code = hmac.new(secret_enc, string_to_sign_enc, digestmod=hashlib.sha256).digest()
    sign = urllib.parse.quote_plus(base64.b64encode(hmac_code))
    webhook = '{}&timestamp={}&sign={}'.format(
        token, timestamp, sign)
    headers = {'Content-Type': 'application/json'}
    data = {
        "msgtype": "text",
        "text": {
            "content": message,
        },
    }

    x = requests.post(url=webhook, data=json.dumps(data), headers=headers)
    if x.json()["errcode"] == 0:
        return True
    else:
        return False


def runcmd(command, timeout=60):
    ret = subprocess.run(command, shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE, encoding="utf-8",
                         timeout=timeout)
    if ret.returncode == 0:
        return (0, ret)
    else:
        return (1, ret)


if __name__ == "__main__":
    oldRecord = ""
    while True:
        timestamp = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        data = ""
        data += "--------------------" + "\n"
        # 超时为5分钟，300秒
        (retcode, result) = runcmd("./cve -u", timeout=300)
        if retcode == 0:
            data += "Update metadata success\n"
        else:
            data += "Update metadata failed!\n" + str(result) + "\n"
        print(str(timestamp) + " step 1 update metadata")
        data += "--------------------" + "\n"
        # 超时为60秒，默认
        (retcode, result) = runcmd("./cve -l -n 1")
        print(str(timestamp) + " step 2 get new cve")
        # print(retcode, result)
        if retcode == 0:
            data += result.stdout
        else:
            data += result.stderr
        if oldRecord == "":
            oldRecord = result.stdout
            dingtalk(data)
            continue
        if oldRecord != result.stdout:
            dingtalk(data)
            oldRecord = result.stdout
            continue
        print("no update, sleep 60")
        # 若结果一致，则不care
        time.sleep(60)
