.PHONY: default hellp build attach destroy daemon status

APP=cve-ease
VERSION=V0.0.2
DOCKER_IMAGE=$(APP)-$(VERSION)
CONTAINER_NAME=$(APP)-$(VERSION)

default:
	@echo ""
	@echo "Makefile for $(APP) using docker image $(DOCKER_IMAGE)"
	@echo "maintainers: youyifeng <youyf2@chinatelecom.cn>"
	@echo ""
	@echo "help        show help info(default)"
	@echo "status      show docker status"
	@echo "build       build docker image"
	@echo "attach      attach container"
	@echo "destroy     destroy container"
	@echo "daemon      start an container with daemon"
	@echo "bin         build go src"
	@echo "release     strip go bin"
	@echo "fmt         format go src file"
	@echo "clean       clean release file"
	@echo "kill        kill ease-notify program"
	@echo "install     install cve-ease directly"
	@echo "uninstall   uninstall cve-ease directly"

help: default

bin:
	mkdir release &> /dev/null || true
	go build -o release/$(APP) cve.go

release: all
	strip release/$(APP)

fmt:
	go fmt *.go

clean:
	rm -rf release/*

kill:
	pkill -x ease-notify || true

install: kill
	mkdir -p ${DESTDIR}/usr/bin &> /dev/null || true
	mkdir -p ${DESTDIR}/etc/ease &> /dev/null || true
	mkdir -p ${DESTDIR}/var/log/ease &> /dev/null || true
	mkdir -p ${DESTDIR}/usr/lib/systemd/system &> /dev/null || true
	cp release/$(APP) ${DESTDIR}/usr/bin/
	cp notify.py ${DESTDIR}/usr/bin/ease-notify
	cp ease.service ${DESTDIR}/usr/lib/systemd/system/
	touch ${DESTDIR}/var/log/ease/log
	systemctl daemon-reload

uninstall:
	rm ${DESTDIR}/usr/bin/$(APP)
	rm ${DESTDIR}/usr/bin/ease-notify
	rm -rf ${DESTDIR}/var/log/ease
	rm ${DESTDIR}/usr/lib/systemd/system/ease.service
	systemctl daemon-reload

build:
	cp ../release/cve-ease-*x86_64.rpm . -a
	@echo " copy rpm ok"
	docker build -t cve-ease:v0.0.2 .
	@echo " docker build ok"
	docker image ls cve-ease

attach:
	docker exec -it $(CONTAINER_NAME) /bin/bash

destroy:
	docker container rm --force $(CONTAINER_NAME) || :

daemon:
	docker image ls -a
	docker run -d --privileged \
		--name $(CONTAINER_NAME) \
		$(DOCKER_IMAGE) \
		/sbin/init

status:
	systemctl status docker --no-pager
	docker image ls $(DOCKER_IMAGE)
	docker container ls --filter name=$(CONTAINER_NAME)
	@echo "All ok!"
