# -*- coding: utf-8 -*-

"""
 (c) 2023 - Copyright CTyunOS Inc

 Authors:
   youyifeng <youyf2@chinatelecom.cn>

"""

from optparse import OptionParser
from cve_ease_dev import activate_session, Scraper
from sqlalchemy import select
import logging
import json

logger = logging.getLogger('service-ease')


def get_usage_str(usage):
    return usage + "\n(Specify the --help global option for a list of other help options)"


def cve_ease_status():
    import dbus
    sysbus = dbus.SystemBus()
    systemd1 = sysbus.get_object('org.freedesktop.systemd1', '/org/freedesktop/systemd1')
    manager = dbus.Interface(systemd1, 'org.freedesktop.systemd1.Manager')
    job = manager.GetUnitFileState('cve-ease.service')
    print(" * On-boot status cve-ease.service:", job)
    manager.Reload()
    job = manager.GetUnit('cve-ease.service')
    print(" * Active cve-ease.service:", job)


def cve_ease_start():
    import dbus
    sysbus = dbus.SystemBus()
    systemd1 = sysbus.get_object('org.freedesktop.systemd1', '/org/freedesktop/systemd1')
    manager = dbus.Interface(systemd1, 'org.freedesktop.systemd1.Manager')
    job = manager.EnableUnitFiles(['cve-ease.service'], False, True)
    print(" * Enable cve-ease.service:", job)
    manager.Reload()
    job = manager.StartUnit('cve-ease.service', 'fail')
    print(" * Start cve-ease.service:", job)


def cve_ease_kill():
    import dbus
    sysbus = dbus.SystemBus()
    systemd1 = sysbus.get_object('org.freedesktop.systemd1', '/org/freedesktop/systemd1')
    manager = dbus.Interface(systemd1, 'org.freedesktop.systemd1.Manager')
    job = manager.StopUnit('cve-ease.service', 'fail')
    print(" * Stop cve-ease.service:", job)
    job = manager.DisableUnitFiles(['cve-ease.service'], False)
    print(" * Disable cve-ease.service:", job)
    manager.Reload()


def cve_ease_restart():
    cve_ease_kill()
    cve_ease_start()


def handle_service(gconfig, db_session, args):
    """
    org.freedesktop.systemd1 â€” The D-Bus interface of systemd
    reference: https://dbus.freedesktop.org/doc/dbus-python/dbus.html
               https://ggargblogs.wordpress.com/2020/09/06/using-dbus-api-in-python-for-managing-services-in-linux/
    :param gconfig:
    :param db_session:
    :param args:
    :return:
    """
    usage = "usage: %prog service <options>"
    parser = OptionParser(usage=get_usage_str(usage))

    parser.add_option('-k', '--kill', dest='kill', action='store_true', default=False,
                      help='kill cve-ease service')
    parser.add_option('-r', '--restart', dest='restart', action='store_true', default=False,
                      help='restart cve-ease service')
    parser.add_option('-s', '--status', dest='status', action='store_true', default=False,
                      help='get cve-ease service status')
    parser.add_option('-v', '--verbose', dest='verbose', action='store_true', default=False,
                      help='show verbose output')

    (options, args) = parser.parse_args(args)

    session = activate_session(db_session, gconfig)
    if gconfig.debug:
        print("active sql session")

    if options.status:
        cve_ease_status()
    elif options.kill:
        cve_ease_kill()
    elif options.restart:
        cve_ease_restart()
    else:
        cve_ease_status()
