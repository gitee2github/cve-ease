# -*- coding: utf-8 -*-

"""
 (c) 2023 - Copyright CTyunOS Inc

 Authors:
   youyifeng <youyf2@chinatelecom.cn>

"""

from optparse import OptionParser
from cve_ease import activate_session, Scraper
from cve_ease.models import NVD
from cve_ease.helper import one_instance_check
import logging
import json

logger = logging.getLogger('cve-ease')


def get_usage_str(usage):
    return usage + "\n(Specify the --help global option for a list of other help options)"


def handle_nvd(gconfig, db_session, args):
    """[info] NVD info"""

    # one instance
    lock = one_instance_check(gconfig.LOCK_FILE_PATH)
    if lock:
        raise Exception(f"Another cve-ease already running")

    usage = "usage: %prog nvd <options>"
    parser = OptionParser(usage=get_usage_str(usage))

    parser.add_option('-r', '--rawdata', dest='raw', action='store_true', default=False,
                      help='get nvd cache and print raw data without write db')
    parser.add_option('-m', '--makecache', dest='makecache', action='store_true', default=False,
                      help='get nvd cache')
    parser.add_option('-l', '--list', dest='list', action='store_true', default=False,
                      help='list all nvd info')
    parser.add_option('-t', '--total', dest='total', action='store_true', default=False,
                      help='get nvd info statistics')
    parser.add_option('-v', '--verbose', dest='verbose', action='store_true', default=False,
                      help='show verbose output')

    (options, args) = parser.parse_args(args)

    session = activate_session(db_session, gconfig)
    if gconfig.debug:
        print(" * active sql session")

    if options.makecache:
        pass
    elif options.total:
        pass
    elif options.list:
        pass
    elif options.raw:
        pass
    else:
        parser.print_help()
