# -*- coding: utf-8 -*-

"""
 (c) 2023 - Copyright CTyunOS Inc

 Authors:
   youyifeng <youyf2@chinatelecom.cn>

"""
from optparse import OptionParser
from cve_ease_dev import activate_session, Scraper
from sqlalchemy import select
from cve_ease_dev.models import SA
import logging

logger = logging.getLogger('cve-ease')


def get_usage_str(usage):
    return usage + "\n(Specify the --help global option for a list of other help options)"

def handle_sa(gconfig, db_session, args):
    usage = "usage: %prog sa <options>"
    parser = OptionParser(usage=get_usage_str(usage))

    parser.add_option('-m', '--makecache', dest='makecache', action='store_true', default=False,
                      help='get cve cache')
    parser.add_option('-l', '--list', dest='list', action='store_true', default=False,
                      help='list all cve info')
    parser.add_option('-t', '--total', dest='total', action='store_true', default=False,
                      help='get total cve record number')
    parser.add_option('-v', '--verbose', dest='verbose', action='store_true', default=False,
                      help='show verbose output')

    (options, args) = parser.parse_args(args)

    session = activate_session(db_session, gconfig)
    if gconfig.debug:
        print("active sql session")

    if options.makecache:
        scraper = Scraper()
        response = scraper.scrapySA()
        if "code" in response and response["code"] == 0:
            print(" * scrapy from OpenEuler done")
            totalCount = response["result"]["totalCount"]
            print(" * total record num:", totalCount)
            securityNoticeList = response["result"]["securityNoticeList"]

            # recreate table
            SA.__table__.drop(db_session.get_engine())
            SA.__table__.create(db_session.get_engine())
            session.bulk_insert_mappings(SA, securityNoticeList)
            session.commit()
            session.close()
            print(" * makecache done")
        else:
            print("response error! no usefull info found!")
    elif options.total:
        print("security notice total record :", session.query(SA).count())
    elif options.list:
        securityNoticeList = session.query(SA).all()
        if options.verbose:
            SA.pretty_output_title()
            for sa in securityNoticeList:
                sa.pretty_output()
        else:
            for sa in securityNoticeList:
                sa.simple_output()