# -*- coding: utf-8 -*-

"""
 (c) 2023 - Copyright CTyunOS Inc

 Authors:
   youyifeng <youyf2@chinatelecom.cn>

"""
from cve_ease_dev.helper import get_timestamp

from .base import NotifierBase


class Mail163(NotifierBase):
    """
    Mail163 notifier
    """

    def __init__(self, gconfig, keyname='status_key'):
        self._config = gconfig

        self._key = None
        for (name, value) in gconfig.config['mail163'].items():
            if name == 'mail_sender':
                self._mail_sender = value
            elif name == 'mail_recver':
                self._mail_recver = value
            elif name == 'mail_smtp_token':
                self._mail_smtp_token = value

    def do_send(self, data):
        import smtplib
        from email.mime.text import MIMEText
        import time

        subject = f"openEuler/cve-ease播报群"
        sender = self._mail_sender
        password = self._mail_smtp_token

        content = data
        recver = self._mail_recver
        message = MIMEText(content, "plain", "utf-8")

        message['Subject'] = subject
        message['To'] = recver
        message['From'] = sender

        try:
            smtp = smtplib.SMTP_SSL("smtp.163.com", 994)
            smtp.login(sender, password)
            smtp.sendmail(sender, [recver], message.as_string())
            smtp.close()
        except Exception as e:
            print("[+] mail163 send failed!", str(e))
            exit(1)
        print('[+] mail163 send ok!')

    def send_text(self, msg="", debug=False):
        data = 'cve-ease notifier: \n%s\n%s' % (get_timestamp(), msg)
        if debug:
            print(data)
        self.do_send(data)

    def do_cve_notifier(self, diff):
        print("do_cve_notifier")

    def do_sa_notifier(self, diff):
        print("do_sa_notifier")

