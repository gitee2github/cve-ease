# -*- coding: utf-8 -*-

"""
 (c) 2023 - Copyright CTyunOS Inc

 Authors:
   youyifeng <youyf2@chinatelecom.cn>

"""

import json
from datetime import datetime

import requests
import cve_ease_dev.helper


class Wecom():
    """企业微信群机器人
    https://developer.work.weixin.qq.com/document/path/91770
    每个机器人发送的消息不能超过20条/分钟
    """

    def __init__(self, gconfig, keyname='status_key'):
        self._config = gconfig

        self._key = None
        for (name, value) in gconfig.config['wecom'].items():
            if name == keyname:
                self._key = value

    def do_send_file(self, data, filename="sample.txt"):
        """
        企业微信发送文件接口
        要求文件大小在5B~20M之间
        :param data:
        :return:
        """
        headers = {
            'Content-Type': 'multipart/form-data',
        }
        files = {
            'file': (filename, data),
        }
        res = None
        # https://qyapi.weixin.qq.com/cgi-bin/webhook/upload_media?key=KEY&type=TYPE
        url = f'https://qyapi.weixin.qq.com/cgi-bin/webhook/upload_media?key={self._key}&type=file'
        r = requests.post(url=url, headers=headers, files=files)
        # print(r.text)
        try:
            res = json.loads(r.text)
        except:
            pass
        if r.status_code == 200 and res and 'errcode' in res and 0 == res['errcode']:
            print('[+] wecomBot 发送文件成功')
            try:
                res = json.loads(r.text)
            except Exception as e:
                print("json loads failed!", str(e))
                return ""
            if "media_id" in res and '' != res["media_id"]:
                return res["media_id"]
        else:
            print('[-] wecomBot 发送文件失败')
            print(r.text)
        return ""

    def do_send(self, data):
        res = None
        headers = {'Content-Type': 'application/json'}
        url = f'https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key={self._key}'
        r = requests.post(url=url, headers=headers, data=json.dumps(data))
        # print(r.text)
        try:
            res = json.loads(r.text)
        except:
            pass
        if r.status_code == 200 and res and 'errcode' in res and 0 == res['errcode']:
            print('[+] wecomBot 发送成功')
        else:
            print('[-] wecomBot 发送失败')
            print(r.text)

    def send_markdown(self, msg):
        data = {
            "msgtype": "markdown",
            "markdown": {
                "content": msg,
            },
        }
        self.do_send(data)

    def send_text(self, msg="", mentioned_mobile_list=[], debug=False):
        data = {
            "msgtype": "text",
            "text": {
                "content": msg,
                "mentioned_list": [],
                "mentioned_mobile_list": mentioned_mobile_list,
            }
        }
        if debug:
            print(json.dumps(data, indent=4))
        self.do_send(data)

    def send_news(self, msg):
        data = {
            "msgtype": "news",
            "news": {
                "articles": [
                    {
                        "title": msg["title"] if "title" in msg else '',
                        "description": msg["description"] if "description" in msg else '',
                        "url": msg["url"] if "url" in msg else '',
                        "picurl": msg["picurl"] if "picurl" in msg else '',
                    }
                ]
            }
        }
        self.do_send(data)

    def send_image(self, msg):
        """图片（base64编码前）最大不能超过2M，支持JPG,PNG格式"""
        data = {
            "msgtype": "image",
            "image": {
                "base64": msg["base64"] if "base64" in msg else '',
                "md5": msg["md5"] if "md5" in msg else '',
            }
        }
        self.do_send(data)

    def send_file(self, msg, filename="sample.txt"):
        """图片（base64编码前）最大不能超过2M，支持JPG,PNG格式"""
        data = {
            "msgtype": "file",
            "file": {
                "media_id": self.do_send_file(msg, filename)
            }
        }
        if data["file"]["media_id"]:
            self.do_send(data)
        else:
            raise Exception("upload file failed! no media_id found.")
